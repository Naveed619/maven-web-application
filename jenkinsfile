node{
def mavenHome = tool name: "maven-3.8.6"
try {
notifyBuild('STARTED')
stage('Prepare code') {
echo 'do checkout stuff'
}
stage('Testing') {
echo 'Testing'
echo 'Testing - publish coverage results'
 }
stage('Staging') {
  echo 'Deploy Stage'
}
  stage('Deploy') {
echo 'Deploy - Backend'
 echo 'Deploy - Frontend'
 }
} catch (e) {
				    // If there was an exception thrown, the build failed
				    currentBuild.result = "FAILED"
				    throw e
				  } finally {
				    // Success or failure, always send notifications
				    notifyBuild(currentBuild.result)
				  }
				}

				def notifyBuild(String buildStatus = 'STARTED') {
				  // build status of null means successful
				  buildStatus =  buildStatus ?: 'SUCCESSFUL'

				  // Default values
				  def colorName = 'RED'
				  def colorCode = '#FF0000'
				  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
				  def summary = "${subject} (${env.BUILD_URL})"

				  // Override default values based on build status
				  if (buildStatus == 'STARTED') {
				    color = 'YELLOW'
				    colorCode = '#FFFF00'
				  } else if (buildStatus == 'SUCCESSFUL') {
				    color = 'GREEN'
				    colorCode = '#00FF00'
				  } else {
				    color = 'RED'
				    colorCode = '#FF0000'
				  }

				  // Send notifications
				  slackSend (color: colorCode, message: summary)
				  

/*stage("checkoutcode"){
git branch: 'development', credentialsId: 'd43442ee-dd9f-46bf-b8c9-a11b00f5c562', url: 'https://github.com/Naveed619/maven-web-application.git'    
}
stage("buildcode"){
sh "${mavenHome}/bin/mvn clean deploy"    
}
stage("uploadsonar"){
sh "${mavenHome}/bin/mvn clean sonar:sonar"    
}
stage("uploadnexus"){
sh "${mavenHome}/bin/mvn clean deploy"
}
stage("DeployTom"){
deploy adapters: [tomcat9(credentialsId: '1538910a-0ba5-417c-aa76-bedeaf86644e', path: '', url: 'http://192.168.56.16:6199/')], contextPath: '/zuber', war: '**/maven-web-application.war'
}
*/}
