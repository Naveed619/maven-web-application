node{

def mavenHome = tool name: "maven 3.8.6"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), pipelineTriggers([pollSCM('')])])

stage('checkOutcode'){
    git credentialsId: 'e44dd2a9-aa19-4877-bbf3-1096a030724c', url: 'https://github.com/Naveed619/maven-web-application.git'
}

stage('Build'){
   sh "${mavenHome}/bin/mvn clean package"
}

stage("SonarQubeReport"){
     sh "${mavenHome}/bin/mvn clean sonar:sonar"
}    
 stage('Uploadartifact'){
   sh "${mavenHome}/bin/mvn clean deploy1"
}
 stage("Deployment"){    
     sshagent(['1474fc1d-0f70-43b6-9a57-1d1fe671420b']) {
    // some block
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.31.38:/opt/apache-tomcat-9.0.65/webapps"
         
     }
 }
 try {
notifyBuild('STARTED')
 stage('Prepare code') 
 {
  echo 'do checkout stuff'
 }

 stage('Testing') {
echo 'Testing'
echo 'Testing - publish coverage results'
}
//code snippet for sending slack notification
stage('Staging') {
echo 'Deploy Stage'
}
stage('Deploy') {
echo 'Deploy - Backend'
echo 'Deploy - Frontend'
}

} catch (e) {
 // If there was an exception thrown, the build failed
currentBuild.result = "FAILED"
throw e
} 
finally {
 // Success or failure, always send notifications
 notifyBuild(currentBuild.result)
}
    
}

def notifyBuild(String buildStatus = 'STARTED') {
// build status of null means successful
buildStatus =  buildStatus ?: 'SUCCESSFUL'

 // Default values
def colorName = 'RED'
def colorCode = '#FF0000'
def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
def summary = "${subject} (${env.BUILD_URL})"

// Override default values based on build status
if (buildStatus == 'STARTED') {
color = 'YELLOW'
colorCode = '#FFFF00'
} 
else if (buildStatus == 'SUCCESSFUL') {
color = 'GREEN'
colorCode = '#00FF00'
} 
else {
 color = 'RED'
colorCode = '#FF0000'
}

 // Send notifications
slackSend (color: colorCode, message: summary)
}				
